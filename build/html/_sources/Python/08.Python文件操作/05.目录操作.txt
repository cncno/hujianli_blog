# 目录操作
### 初探os和os.path模块

    os模块是python 内置与操作系统功能和文件系统相关的模块，
    该模块中的语句的执行结果通常与操作系统有关
    os.path模块

    import os
    print(os.name)      #获取操作系统信息
    print(os.linesep)      #获取操作系统操作符
    print(os.path.abspath("D:\GitHub\\21天python\python IO"))
    print(os.path.join(r'D:\GitHub',r'demo\test.txt'))


### 创建目录
#### 代码示例
```
#!/usr/bin/env python
#-*- coding:utf8 -*-
import os
#os.mkdir(path=None,mode=None)
#os.mkdir("D:\\deam")        #创建目录，如果目录存在，会抛出异常

'''
if not os.path.exists("D:\\deam"):
    os.mkdir("D:\\deam")
else:
    print("该目录已经存在！！！！")
'''


#创建一个递归函数，用于创建目录
def mkdir(path):    #创建一个递归函数用于创建目录
    if not os.path.isdir(path):  #判断是否为路径
        mkdir(os.path.split(path)[0])
    else:
        return
    os.mkdir(path)      #创建目录

mkdir('D:\\deam\\test\\aaa')


#创建多级目录的函数
#os.makedirs()
"""makedirs(name [, mode=0o777][, exist_ok=False])"""
os.makedirs("D:\\deam\\test\\bbb")
```

### 删除目录
#### 代码示例
```
#!/usr/bin/env python
#-*- coding:utf8 -*-
#删除目录
import os,shutil
'''
if os.path.exists("D:\deam\\test\\aaa"):
    os.rmdir("D:\deam\\test\\aaa")
else:
    print("目录不存在！！！")

if os.path.exists("D:\deam\\test\\bbb"):
    os.rmdir("D:\deam\\test\\bbb")
else:
    print("目录不存在！！！")

if os.path.exists("D:\deam"):
    os.rmdir("D:\\deam")
else:
    print("目录不存在！！！")
'''
path = "D:\deam"
aaa_path = "D:\deam\\test\\aaa"
bbb_path = "D:\deam\\test\\bbb"
if os.path.exists(aaa_path):
    shutil.rmtree("D:\deam\\test\\aaa")
else:
    print("目录不存在！！！")

shutil.rmtree(path)

```

### 遍历目录
#### 代码示例
```
#!/usr/bin/env python
#-*- coding:utf8 -*-
import os
#os.walk(top, topdown=True, onerror=None, followlinks=False)
'''
   dirpath, dirnames, filenames

    dirpath is a string, the path to the directory.
    dirnames is a list of the names of the subdirectories in dirpath (excluding '.' and '..').
    filenames is a list of the names of the non-directory files in dirpath.
'''
path = r"D:\Cisco_iso"
print("【", path, "】目录下包含的文件和目录：")

for root,dirs,files in os.walk(path,topdown=True):  #遍历指定目录
    for name in dirs:
        print(os.path.join(root, name))      #输出遍历到的目录
    for name in files:
        print('\t', os.path.join(root, name))      #输出遍历到的文件
```