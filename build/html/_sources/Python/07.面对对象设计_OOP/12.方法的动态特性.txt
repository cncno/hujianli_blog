# 方法的动态特性
### 可以将外部函数 动态的添加到类中
#### 代码示例
```
#!/usr/bin/env python
#-*- coding:utf8 -*-
class Fruit(object):
    pass

def add(self):          #定义在类外的函数
    print("grow...")

if __name__ == '__main__':
    Fruit.grow = add            #将函数加到方法中
    fuit = Fruit()              #实例化类
    fuit.grow()                 #调用类中的方法

```

```
#!/usr/bin/env python
#-*- coding:utf8 -*-
class Fruit():
    def grow(self):
        print("grow....")

def update():
    print("grow..........")

if __name__ == '__main__':
    fruit = Fruit()
    fruit.grow()
    fruit.grow = update     #使用update函数来更新方法
    fruit.grow()

```