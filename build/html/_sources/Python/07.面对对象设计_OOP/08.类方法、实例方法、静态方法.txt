# 类方法、静态方法、实例方法

### 用代码来理解
#### 代码示例 1
```
#!/usr/bin/env python
#-*- coding:utf8 -*-
class Date():
    #构造函数
    def __init__(self,year,month,day):
        self.year = year
        self.month = month
        self.day = day

    #实例方法
    def tomorrow(self):
        self.day += 1

    # 静态方法不用写self
    @staticmethod
    def parse_from_string(date_str):
        year, month, day = tuple(date_str.split("-"))
        # 静态方法不好的地方是采用硬编码，如果用类方法的话就不会了
        return Date(int(year), int(month), int(day))

    #类方法
    @classmethod
    def from_string(cls, date_str):
        year, month, day = tuple(date_str.split("-"))
        # cls：传进来的类,而不是像静态方法把类写死了
        return cls(int(year), int(month), int(day))

    def __str__(self):
        return '%s/%s/%s'%(self.year,self.month,self.day)

if __name__ == "__main__":
    new_day = Date(2018,5,9)
    #实例方法
    new_day.tomorrow()
    print(new_day)       #2018/5/10

    #静态方法
    date_str = '2018-05-09'
    new_day = Date.parse_from_string(date_str)
    print(new_day)       #2018/5/9

    # 类方法
    date_str = '2018-05-09'
    new_day = Date.from_string(date_str)
    print(new_day)  # 2018/5/9

```

#### 代码示例 2
```
#!/usr/bin/env python
#-*- coding:utf8 -*-
"""
1.实例方法
2.类方法
3.静态方法
"""


#类中的方法都是实例方法
#定义静态方法需要用@staticmethod进行修饰
#定义类方法需要使用装饰器@classmethod进行修饰

class DemoMthd:
    @staticmethod           #静态方法不要传入self，类.方法名调用/实例名.方法名调用
    def static_mthd():
        print("调用静态方法！")

    @classmethod
    def class_mthd(cls):
        print("调用了类方法！")
DemoMthd.static_mthd()        # 未实例化，通过类名进行调用静态方法
DemoMthd.class_mthd()         # 未实例化，通过类名调用类方法
print("".center(100,"*"))
print("实例化类之后，调用静态方法和类方法.")
hu = DemoMthd()
hu.static_mthd()        #通过类实例调用静态方法
hu.class_mthd()         #通过类实例调用类方法

```


```python
#!/usr/bin/env python
#-*- coding:utf8 -*-

class Foo:
    name = "class_name"

    def __init__(self,name):
        self.name = name

    def ord_fun(self):
        """ 定义普通方法，至少有一个self参数"""
        print("普通方法")

    @classmethod
    def class_func(cls):
        print("类方法", cls.name)

    @staticmethod
    def static_func():
        ''' 定义静态方法，无默认参数'''
        print("静态方法")


# 调用普通方法
f = Foo("hujianli")
f.ord_fun()


# 调用类方法
Foo.class_func()

#调用静态方法
Foo.static_func()
```


